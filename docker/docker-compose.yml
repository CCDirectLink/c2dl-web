# C2DL Docker Environment
#
# Copyright 2021 CCDirectLink

version: "3"

services:

  # Database: MySQL
  db:
    container_name: "c2dl-mysql"
    image: mysql:5.7.28
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=c2dl
      - MYSQL_DATABASE=c2dl
      - MYSQL_USER=c2dl
      - MYSQL_PASSWORD=c2dl
    ports:
      - '3306:3306'
    volumes:
      - ./.run/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", 'mysql --database=c2dl --password=c2dl --execute="SELECT count(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B']
      interval: 30s
      timeout: 10s
      retries: 4
    networks:
      - back

  # Adminer
  adminer:
    container_name: "c2dl-adminer"
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - back
      - front

  # PHP
  php:
    container_name: "c2dl-php"
    build:
      context: .
      dockerfile: ./conf/php/Dockerfile
    volumes_from:
      - apache
    volumes:
      - ./conf/php/php.ini:/usr/local/etc/php/conf.d/user-php.ini
    working_dir: /usr/local/apache2/htdocs
    ports:
      - "9000:9000"
    networks:
      - back

  # Composer
  composer:
    container_name: "c2dl-composer"
    restart: 'no'
    image: composer/composer:2.7.4
    command: install
    healthcheck:
      test: [ "CMD-SHELL", 'bash -c "[ -d vendors ]"' ]
      interval: 45s
      timeout: 10s
      retries: 4
    volumes:
      - ../src/c2dl:/app
    working_dir: /app
    networks:
      - back

  # Apache
  apache:
    container_name: "c2dl-apache"
    image: httpd:2.4
    volumes:
      - ./.run/logs:/usr/local/apache2/logs
      - ./conf/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./conf/apache/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf
      - ../src/c2dl:/usr/local/apache2/htdocs
      - ./servertest:/usr/local/apache2/servertest
    depends_on:
      - db
      - node
    working_dir: /usr/local/apache2/htdocs
    ports:
      - 8088:80
      - 8888:8888
    networks:
      - back
      - front

  # Node
  node:
    container_name: "c2dl-node"
    image: node:current-bookworm-slim
    command: sh -c "npm install && npm run build"
    healthcheck:
      test: ["CMD-SHELL", 'bash -c "[ -d node_modules ]"']
      interval: 45s
      timeout: 10s
      retries: 4
    volumes:
      - ../src/c2dl:/c2dl
    working_dir: /c2dl

networks:
  front:
    driver: bridge
  back:
    driver: bridge
